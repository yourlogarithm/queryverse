x-common-env: &common-env
  RUST_LOG: INFO
  LOKI_URL: http://loki:3100
  OTEL_EXPORTER_OTLP_ENDPOINT: http://tempo:4317
  REDIS_URI: redis://redis:6379
  QDRANT_URI_WRITE: http://qdrant:6334
  MONGO_URI_WRITE: mongodb://admin:password@mongodb:27017
  TEI_URI: grpc://text-embeddings-inference-api:50051
  MESSAGING_URI: grpc://messaging-service:50051
  CRAWLER_URI: grpc://crawler-service:50051
  VECTOR_DIM: 1024

services:
  crawler-service:
    build:
      context: .
      dockerfile: crawler-service/Dockerfile
    restart: always
    ports:
      - 50051:50051
    expose:
      - 50051
    depends_on:
      redis:
        condition: service_healthy
    environment:
      <<: *common-env

  selector-service:
    build:
      context: .
      dockerfile: selector-service/Dockerfile
    restart: always
    environment:
      <<: *common-env

  messaging-service:
    build:
      context: .
      dockerfile: messaging-service/Dockerfile
    restart: always
    ports:
      - 50052:50051
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - 50051
    environment:
      <<: *common-env

  text-embeddings-inference-api:
    build: 
      context: text-embeddings-inference
      target: grpc
    ports:
      - 50053:50051
    expose:
      - 50051
    volumes:
      - ./data:/data
    command: [ "--model-id", "BAAI/bge-m3", "--port", "50051", "--otlp-endpoint", "http://tempo:4317", "--payload-limit", "200000000", "--max-concurrent-requests", "1024" ]

  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    expose:
      - 27017
    healthcheck:
      test: echo 'db.runCommand("ping")' | mongo admin -u admin -p password --quiet
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    expose:
      - 8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./data/qdrant:/qdrant/storage

  grafana:
    image: grafana/grafana:latest
    volumes:
      - "./conf:/etc/grafana/provisioning/datasources/"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor
    ports:
      - 3000:3000

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:latest
    command:
      - "-config.file=/etc/tempo.yaml"
    volumes:
      - "./conf/tempo.yaml:/etc/tempo.yaml"
    ports:
      - 3200:3200
      - 4317:4317
    depends_on:
      - init
      - memcached

  init:
    image: grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  memcached:
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m
      - MEMCACHED_THREADS=4

configs:
  qdrant_config:
    content: |
      log_level: INFO

volumes:
  grafana-storage:

x-common-env: &common-env
  RUST_LOG: INFO
  OTEL_COLLECTOR: http://otel-collector:4317
  REDIS_URI: redis://redis:6379
  QDRANT_URI_WRITE: http://qdrant:6334
  QDRANT_URI_READ: http://qdrant:6334
  MONGO_URI_WRITE: mongodb://admin:password@mongodb:27017
  TEI_URI: grpc://text-embeddings-inference-api:50051
  MESSAGING_URI: grpc://messaging-service:50051
  CRAWLER_URI: grpc://crawler-service:50051
  LOGSTASH_URI: http://logstash:5044
  VECTOR_DIM: 1024

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        APP_NAME: backend
    restart: always
    ports:
      - 8000:8000
    expose:
      - 8000
    environment:
      <<: *common-env


  crawler-service:
    build:
      context: .
      dockerfile: crawler-service/Dockerfile
      args:
        APP_NAME: crawler-service
    restart: always
    ports:
      - 50051:50051
    expose:
      - 50051
    depends_on:
      redis:
        condition: service_healthy
    environment:
      <<: *common-env

  selector-service:
    build:
      context: .
      dockerfile: selector-service/Dockerfile
      args:
        APP_NAME: selector-service
    restart: always
    environment:
      <<: *common-env

  messaging-service:
    build:
      context: .
      dockerfile: messaging-service/Dockerfile
      args:
        APP_NAME: messaging-service
    restart: always
    ports:
      - 50052:50051
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - 50051
    environment:
      <<: *common-env

  text-embeddings-inference-api:
    build:
      context: text-embeddings-inference
      target: grpc
    expose:
      - 50051
    volumes:
      - ./data:/data
    command: [ "--model-id", "BAAI/bge-m3", "--port", "50051", "--otlp-endpoint", "http://otel-collector:4317", "--payload-limit", "200000000", "--max-concurrent-requests", "1024" ]

  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    expose:
      - 27017
    healthcheck:
      test: echo 'db.runCommand("ping")' | mongo admin -u admin -p password --quiet
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    expose:
      - 8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./data/qdrant:/qdrant/storage

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - ./conf/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/grafana-datasources.yaml
    ports:
      - 3000:3000
    environment:
      GF_INSTALL_PLUGINS: https://github.com/quickwit-oss/quickwit-datasource/releases/download/v0.3.1/quickwit-quickwit-datasource-0.3.1.zip;quickwit-quickwit-datasource
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin

  tempo:
    image: grafana/tempo:latest
    command:
      - "-config.file=/etc/tempo.yaml"
    volumes:
      - "./conf/tempo.yaml:/etc/tempo.yaml"
    depends_on:
      - init
      - memcached

  init:
    image: grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m
      - MEMCACHED_THREADS=4

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./conf/otel-collector.yaml:/etc/otel-collector-config.yaml

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    volumes:
      - ./conf/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  esdata:
    driver: local
  grafana-storage:

configs:
  qdrant_config:
    content: |
      log_level: INFO

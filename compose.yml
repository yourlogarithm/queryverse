services:
  crawler-api:
    build:
      context: .
      dockerfile: crawler-api/Dockerfile
      args:
        - NLP_API=http://nlp-api:8000
        - REDIS_URI=redis://redis:6379
        - AMQP_URI=amqp://rabbitmq:5672
        - QDRANT_URI=http://qdrant:6334
        - MONGO_URI=mongodb://admin:password@mongodb:27017
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 8000:8000

  selector-service:
    build:
      context: .
      dockerfile: selector-service/Dockerfile
      args:
        - CRAWLER_API=http://crawler-api:8000
        - REDIS_URI=redis://redis:6379
        - AMQP_URI=amqp://rabbitmq:5672
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 8010:8000

  nlp-api:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-latest
    ports:
      - "8020:8000"
    volumes:
      - ./data:/data
    command: ["--model-id", "thenlper/gte-small", "--port", "8000", "--payload-limit", "0"]

  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --notify-keyspace-events KEA
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping")' | mongo admin -u admin -p password --quiet
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml

configs:
  qdrant_config:
    content: |
      log_level: INFO